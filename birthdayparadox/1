'''
Имитационное моделирование парадокса дней рождения, (c) Эл Свейгарт
Изучаем неожиданные вероятности из "Парадокса
дней рождения". Больше информации — в статье https://ru.wikipedia.org/wiki/Парадокс_дней_рождения
'''

import datetime, random


def getBirthdays(numberOfBirthdays):
    birthdays = []
    for i in range(numberOfBirthdays):
        statOfYear = datetime.date(2001, 1, 1)
        randomNumberOfDays = datetime.timedelta(random.randint(0, 364))
        birthday = statOfYear + randomNumberOfDays
        birthdays.append(birthday)
    return birthdays


def getMatch(birthdays):
    if len(birthdays) == len(set(birthdays)):
        return
    for a, birthdayA in enumerate(birthdays):
        for b, birthdayB in enumerate(birthdays[a + 1:]):
            if birthdayA == birthdayB:
                return birthdayA


print('''Birthday Paradox, 
 The Birthday Paradox shows us that in a group of N people, the odds
 that two of them have matching birthdays is surprisingly large.
 This program does a Monte Carlo simulation (that is, repeated random
 simulations) to explore this concept.
 (It's not actually a paradox, it's just a surprising result.)''')

months = ('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
          'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Des')

while True:
    print('How many birthdays shall I generate? (Max <= 100)')
    response = input('> ')
    if response.isdecimal() and (0 < int(response) <= 100):
        numBDays = int(response)
        break
print()
print('Here are', numBDays, 'birthdays:')
birthdays = getBirthdays(numBDays)
for i, birthday in enumerate(birthdays):
    if i != 0:
        print(', ', end='')
    monthName = months[birthday.month - 1]
    dataText = f'{monthName}, {birthday.day}'
    print(dataText, end='')

print()
print()

match = getMatch(birthdays)
birthday
print('In this  simulation, ', end='')
if match != None:
    monthName = months[match.month - 1]
    dataText = f'{monthName}{match.day}'
    print('multiple people have a birthday on ', dataText)
else:
    print('there are no matching birthday.')
print()
print('Generating', numBDays, ' random birthdays 100,000 times ...')
input('Press Enter to begin ...')

print('Let\'s run another 100,000 simulations.')
simMatch = 0
for i in range(100_000):
    if i % 1000 == 0:
        print(i, 'simulations run...')
    birthdays = getBirthdays(numBDays)
    if getMatch(birthdays) != None:
        simMatch = simMatch + 1
print('100,000 simulations run.')


probability = round(simMatch / 100_000 * 100, 2)
print('Out of 100,000 simulations of', numBDays, 'people, there was a')
print('matching birthday in that group', simMatch, 'times. This means')
print('that', numBDays, 'people have a', probability, '% chance of')
print('having a matching birthday in their group.')
print('That\'s probably more than you would think!')
